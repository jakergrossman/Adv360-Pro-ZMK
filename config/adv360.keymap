#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"

        sym_row_1: sym_row_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_1";
            bindings = <&kp PLUS>, <&kp NUMBER_1>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_2: sym_row_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_2";
            bindings = <&kp LEFT_BRACKET>, <&kp NUMBER_2>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_3: sym_row_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_3";
            bindings = <&kp LEFT_BRACE>, <&kp NUMBER_3>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_5: sym_row_5 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_5";
            bindings = <&kp AMPERSAND>, <&kp N5>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_6: sym_row_6 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_6";
            bindings = <&kp EQUAL>, <&kp NUMBER_6>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_7: sym_row_7 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_7";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp NUMBER_7>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_8: sym_row_8 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_8";
            bindings = <&kp RIGHT_BRACE>, <&kp NUMBER_8>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_9: sym_row_9 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_9";
            bindings = <&kp RIGHT_BRACKET>, <&kp NUMBER_9>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_0: sym_row_0 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_0";
            bindings = <&kp ASTRK>, <&kp NUMBER_0>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        backslash_pound: backslash_pound {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSLASH_POUND";
            bindings = <&kp BACKSLASH>, <&kp HASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        excl_pct: excl_pct {
            compatible = "zmk,behavior-mod-morph";
            label = "EXCL_PCT";
            bindings = <&kp EXCLAMATION>, <&kp PERCENT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        at_uptick: at_uptick {
            compatible = "zmk,behavior-mod-morph";
            label = "AT_UPTICK";
            bindings = <&kp AT_SIGN>, <&kp CARET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        pipe_grave: pipe_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "PIPE_GRAVE";
            bindings = <&kp PIPE>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        dollar_tilde: dollar_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "DOLLAR_TILDE";
            bindings = <&kp DOLLAR>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_4: sym_row_4 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_4";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp NUMBER_4>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <46 59>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&dollar_tilde  &sym_row_1     &sym_row_2  &sym_row_3  &sym_row_4  &sym_row_5  &kp LC(C)                                                             &kp K_CALCULATOR  &sym_row_6  &sym_row_7  &sym_row_8  &sym_row_9  &sym_row_0  &excl_pct
&kp SLASH      &kp SEMICOLON  &kp COMMA   &kp PERIOD  &kp P       &kp Y       &kp LC(V)                                                             &at_uptick        &kp F       &kp G       &kp C       &kp R       &kp L       &backslash_pound
&lt 3 ESCAPE   &kp A          &kp O       &kp E       &kp U       &kp I       &kp LC(X)  &kp LCTRL      &kp LEFT_GUI      &kp RIGHT_ALT  &kp RCTRL  &pipe_grave       &kp D       &kp H       &kp T       &kp N       &kp S       &kp MINUS
&kp LSHFT      &kp SQT        &kp Q       &kp J       &kp K       &kp X                                 &kp F18           &kp F20                                     &kp B       &kp M       &kp W       &kp V       &kp Z       &kp RIGHT_SHIFT
&mo 5          &kp F13        &kp F14     &kp F15     &kp F16                 &kp SPACE  &kp BACKSPACE  &kp F17           &kp F19        &kp ENTER  &kp TAB                       &none       &none       &none       &none       &none
            >;
        };

        stupid_copy_paste {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &kp LC(INSERT)                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp LS(INSERT)                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp LS(DELETE)  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                          &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans          &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        qwerty_island {
            bindings = <
&kp GRAVE  &kp N1  &kp N2     &kp N3   &kp N4    &kp N5  &trans                                      &trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0    &kp EQUAL
&kp TAB    &kp Q   &kp W      &kp E    &kp R     &kp T   &trans                                      &trans  &kp Y   &kp U   &kp I   &kp O   &kp P     &trans
&trans     &kp A   &kp S      &kp D    &kp F     &kp G   &trans  &trans  &trans      &trans  &trans  &trans  &kp H   &kp J   &kp K   &kp L   &kp SEMI  &trans
&trans     &kp Z   &kp X      &kp C    &kp V     &kp B                   &trans      &trans                  &trans  &trans  &trans  &trans  &trans    &trans
&kp B      &kp M   &kp COMMA  &kp DOT  &kp FSLH          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans    &trans
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4    &kp F5        &kp F6      &none                                       &mo 4   &kp F7  &kp F8      &kp F9            &kp F10     &kp F11            &kp F12
&trans  &trans  &trans  &trans    &trans        &kp LC(Z)   &tog 2                                      &none   &trans  &trans      &trans            &trans      &kp RIGHT          &trans
&trans  &trans  &trans  &trans    &trans        &kp LC(Y)   &none   &trans  &trans      &trans  &trans  &none   &none   &kp LEFT    &trans            &trans      &trans             &bl BL_OFF
&trans  &trans  &trans  &kp DOWN  &kp UP_ARROW  &kp DELETE                  &none       &none                   &trans  &none       &none             &trans      &kp C_VOLUME_UP    &bt BT_CLR
&trans  &trans  &trans  &trans    &trans                    &trans  &trans  &trans      &trans  &trans  &trans          &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_DOWN  &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                       &trans                  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none         &none         &none         &none         &none         &bootloader                                                                 &bootloader             &none         &none            &none         &none         &none         &none
&none  &none         &none         &none         &none         &none         &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR  &bt BT_CLR      &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5  &none         &none            &none         &none         &none         &none
&none  &none         &none         &none         &none         &none                                             &none           &none                                           &none         &none            &none         &none         &none         &none
&none  &none         &none         &none         &none                       &none                   &none       &none           &none       &bl BL_INC  &bl BL_DEC                            &rgb_ug RGB_TOG  &bl BL_TOG    &none         &none         &bl BL_TOG
            >;
        };

        layer_4 {
            bindings = <
&none  &none  &none   &none    &none    &none    &none                                  &none  &bt BT_PRV  &bt BT_NXT  &none  &none  &none  &bt BT_CLR
&none  &none  &kp F9  &kp F10  &kp F11  &kp F12  &none                                  &none  &none       &none       &none  &none  &none  &none
&none  &none  &kp F5  &kp F6   &kp F7   &kp F8   &none  &none  &none      &none  &none  &none  &none       &none       &none  &none  &none  &none
&none  &none  &kp F1  &kp F2   &kp F3   &kp F4                 &none      &none                &none       &none       &none  &none  &none  &none
&none  &none  &none   &none    &none             &none  &none  &none      &none  &none  &none              &none       &none  &none  &none  &none
            >;
        };
    };
};
